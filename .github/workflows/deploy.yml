name: Deploy to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore GloboClima/GloboClima.csproj
      
    - name: Build
      run: dotnet build GloboClima/GloboClima.csproj --no-restore
      
    - name: Test
      run: dotnet test GloboClima/GloboClima.csproj --no-build --verbosity normal

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Build and Publish
      run: |
        dotnet publish GloboClima/GloboClima.csproj -c Release -o ./publish
        tar -czf globoclima-app.tar.gz -C ./publish .
        
    - name: Copy files to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "globoclima-app.tar.gz,scripts/deploy.sh"
        target: "/home/${{ secrets.EC2_USER }}/"
        
    - name: Deploy on EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          chmod +x /home/${{ secrets.EC2_USER }}/scripts/deploy.sh
          /home/${{ secrets.EC2_USER }}/scripts/deploy.sh