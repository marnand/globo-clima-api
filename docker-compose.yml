version: '3.8'

services:
  globoclima-app:
    image: ${DOCKER_USERNAME}/${DOCKER_IMAGE}:latest
    container_name: globoclima-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - AWS_ACCESS_KEY_ID=dummy
      - AWS_SECRET_ACCESS_KEY=dummy
      - AWS_DEFAULT_REGION=us-east-1
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      dynamodb-local:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - globoclima-network

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: globoclima-dynamodb
    restart: unless-stopped
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "./data"]
    volumes:
      - dynamodb_data:/home/dynamodblocal/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - globoclima-network

  nginx:
    image: nginx:alpine
    container_name: globoclima-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      globoclima-app:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - globoclima-network

volumes:
  dynamodb_data:
    driver: local

networks:
  globoclima-network:
    driver: bridge